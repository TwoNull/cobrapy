<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>strain design on cobrapy - constraint-based metabolic modeling in Python</title>
    <link>https://opencobra.github.io/cobrapy/tags/strain-design/</link>
    <description>Recent content in strain design on cobrapy - constraint-based metabolic modeling in Python</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 14 Sep 2022 12:00:00 +0000</lastBuildDate><atom:link href="https://opencobra.github.io/cobrapy/tags/strain-design/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CNApy</title>
      <link>https://opencobra.github.io/cobrapy/packages/cnapy/</link>
      <pubDate>Wed, 14 Sep 2022 12:00:00 +0000</pubDate>
      
      <guid>https://opencobra.github.io/cobrapy/packages/cnapy/</guid>
      <description>CNApy is a graphical integrated environment for metabolic network analysis. With CNApy, it is possible to load, edit and create metabolic models together with interactive network maps. Many standard and advanced COBRA techniques (including, e.g., Flux Balance Analysis, Flux Variability Analysis and Minimal Cut Sets) are supported and all main results of these techniques can be directly visualized in the network maps. Furthermore, CNApy also provides a GUI for all major functions of the StrainDesign package.</description>
    </item>
    
    <item>
      <title>StrainDesign</title>
      <link>https://opencobra.github.io/cobrapy/packages/straindesign/</link>
      <pubDate>Tue, 31 May 2022 12:00:00 +0000</pubDate>
      
      <guid>https://opencobra.github.io/cobrapy/packages/straindesign/</guid>
      <description>StrainDesign, a comprehensive Python package that integrates the most popular deterministic metabolic design algorithms, including nested strain optimization methods such as RobustKnock, OptCouple and OptKnock, as well as the more general minimal cut sets approach. The optimization approaches are embedded in individual modules, which can also be combined for setting up more elaborate strain design problems. Advanced features, such as the efficient integration of GPR-rules, the consideration of gene and reaction additions and of regulatory interventions are available for all modules.</description>
    </item>
    
    <item>
      <title>dd-decaf</title>
      <link>https://opencobra.github.io/cobrapy/packages/dd-decaf/</link>
      <pubDate>Mon, 27 Mar 2017 11:52:33 -0600</pubDate>
      
      <guid>https://opencobra.github.io/cobrapy/packages/dd-decaf/</guid>
      <description>DD-DeCaF is a Horizon 2020 project (grant agreement No 686070) bringing together leading academic partners from five European universities with five innovative European companies to address the challenge of building a comprehensive design tool. DD-DeCaF aims to develop cutting edge methods in order to use large scale data to design cell factories and communities for biotechnological applications. The project is built as a number of micro-services which can be used separately and via the web-based user-interface.</description>
    </item>
    
    <item>
      <title>cameo</title>
      <link>https://opencobra.github.io/cobrapy/packages/cameo/</link>
      <pubDate>Fri, 13 Jan 2017 11:00:01 -0600</pubDate>
      
      <guid>https://opencobra.github.io/cobrapy/packages/cameo/</guid>
      <description>Cameo is a high-level python library developed to aid the strain design process in metabolic engineering projects. The library provides a modular framework of simulation methods, strain design methods, access to models, that targets developers that want custom analysis workflows.
Computationally heavy methods have been parallelized and can be run on a clusters using the IPython parallelization framework (see example and documentation for more details). The default fallback is python&amp;rsquo;s multiprocessing library.</description>
    </item>
    
  </channel>
</rss>
