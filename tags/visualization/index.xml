<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>visualization on cobrapy - constraint-based metabolic modeling in Python</title>
    <link>https://opencobra.github.io/cobrapy/tags/visualization/</link>
    <description>Recent content in visualization on cobrapy - constraint-based metabolic modeling in Python</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 14 Sep 2022 12:00:00 +0000</lastBuildDate><atom:link href="https://opencobra.github.io/cobrapy/tags/visualization/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CNApy</title>
      <link>https://opencobra.github.io/cobrapy/packages/cnapy/</link>
      <pubDate>Wed, 14 Sep 2022 12:00:00 +0000</pubDate>
      
      <guid>https://opencobra.github.io/cobrapy/packages/cnapy/</guid>
      <description>CNApy is a graphical integrated environment for metabolic network analysis. With CNApy, it is possible to load, edit and create metabolic models together with interactive network maps. Many standard and advanced COBRA techniques (including, e.g., Flux Balance Analysis, Flux Variability Analysis and Minimal Cut Sets) are supported and all main results of these techniques can be directly visualized in the network maps. Furthermore, CNApy also provides a GUI for all major functions of the StrainDesign package.</description>
    </item>
    
    <item>
      <title>StrainDesign</title>
      <link>https://opencobra.github.io/cobrapy/packages/straindesign/</link>
      <pubDate>Tue, 31 May 2022 12:00:00 +0000</pubDate>
      
      <guid>https://opencobra.github.io/cobrapy/packages/straindesign/</guid>
      <description>StrainDesign, a comprehensive Python package that integrates the most popular deterministic metabolic design algorithms, including nested strain optimization methods such as RobustKnock, OptCouple and OptKnock, as well as the more general minimal cut sets approach. The optimization approaches are embedded in individual modules, which can also be combined for setting up more elaborate strain design problems. Advanced features, such as the efficient integration of GPR-rules, the consideration of gene and reaction additions and of regulatory interventions are available for all modules.</description>
    </item>
    
    <item>
      <title>escher</title>
      <link>https://opencobra.github.io/cobrapy/packages/escher/</link>
      <pubDate>Mon, 27 Mar 2017 12:13:48 -0600</pubDate>
      
      <guid>https://opencobra.github.io/cobrapy/packages/escher/</guid>
      <description>Escher is a web-based tool for building, viewing, and sharing visualizations of biological pathways. These &amp;lsquo;pathway maps&amp;rsquo; are a great way to contextualize data about metabolism.</description>
    </item>
    
    <item>
      <title>d3flux</title>
      <link>https://opencobra.github.io/cobrapy/packages/d3flux/</link>
      <pubDate>Fri, 13 Jan 2017 11:00:03 -0600</pubDate>
      
      <guid>https://opencobra.github.io/cobrapy/packages/d3flux/</guid>
      <description>This package implements a d3.js based visualization tool for cobrapy models.</description>
    </item>
    
    <item>
      <title>SAMMI</title>
      <link>https://opencobra.github.io/cobrapy/packages/sammi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://opencobra.github.io/cobrapy/packages/sammi/</guid>
      <description>SAMMI is an interactive tool for the visualization of constraint-based models. While automated features allow for easy network partitioning, navigation, and node positioning, SAMMI also offers a wide array of manual map editing features. This combination allows for fast, context-specific visualization of metabolic networks as well as the development of standardized, large-scale, visually appealing maps.</description>
    </item>
    
  </channel>
</rss>
